{"version":3,"sources":["components/RequestExchangeRate.js","components/ConvertExchangeRates.js","components/Title.js","components/Clock.js","components/footer.js","components/NewMain.js","components/ApiCall.js","index.js"],"names":["RequestExchangeRate","state","removeRateIfBase","key","index","_this","props","base","react_default","a","createElement","parseFloat","Number","rates","toFixed","addEURToDropDownIfAbsent","newRatesArray","concat","value","display","sort","map","_this2","this","className","style","color","textDecoration","onSubmit","handleSubmit","onChange","handleChange","type","Object","keys","React","Component","ConvertExchangeRates","displayDropDown","handleConversion","id","placeholder","step","amount","handleAmountChange","name","startcurrency","handleFromDropdown","endcurrency","result","defValue","Title","title","defaultProps","Clock","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","time","Date","toLocaleTimeString","date","toLocaleDateString","intervalID","setInterval","tick","clearInterval","intervalId","setState","Footer","footerText","ExchangeRatesApp","event","preventDefault","basicUrl","fetch","then","res","json","data","items","target","baseCurrencyFrom","convertCurrencyTo","rateValue","convResult","prevState","isLoaded","bind","assertThisInitialized","USD","_this$state","ratesKeys","components_Title","components_Clock","components_RequestExchangeRate","components_ConvertExchangeRates","convFetchRes","footer","ReactDOM","render","NewMain","document","getElementById"],"mappings":"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","file":"static/js/main.48992a42.chunk.js","sourcesContent":["import React from \"react\";\n\nclass RequestExchangeRate extends React.Component {\n  state = {};\n\n  removeRateIfBase = (key, index) => {\n    if (key !== this.props.base) {\n      return (\n        <li key={index}>\n          {key +\n            \":\" +\n            \" \" +\n            parseFloat(Number(this.props.rates[key]).toFixed(5))}\n        </li>\n      );\n    }\n  };\n\n  addEURToDropDownIfAbsent = () => {\n    if (this.props.base === \"EUR\") {\n      let currencyAr = { value: \"EUR\", display: \"EUR\" };\n      let newRatesArrayAndEUR = this.props.newRatesArray.concat(currencyAr);\n      return newRatesArrayAndEUR.sort().map((rates) => (\n        <option key={rates.value} value={rates.value}>\n          {rates.display}\n        </option>\n      ));\n    } else {\n      return this.props.newRatesArray.map((rates) => (\n        <option key={rates.value} value={rates.value}>\n          {rates.display}\n        </option>\n      ));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <p className=\"titleStyles\">Request Exchange Rate</p>\n        <hr />\n        <p>1. Select Base Rate</p>\n        <p>\n          2. Click{\" \"}\n          <span style={{ color: \"red\", textDecoration: \"underline\" }}>\n            SUBMIT\n          </span>{\" \"}\n          for the base rate to change\n        </p>\n        <form onSubmit={this.props.handleSubmit}>\n          <label>\n            <select value={this.props.value} onChange={this.props.handleChange}>\n              {/* populates the dropdown with the country codes */}\n              {this.addEURToDropDownIfAbsent()}\n            </select>\n          </label>\n          <input type=\"submit\" value=\"submit\" />\n        </form>\n        <p> 1 {this.props.value} is equal to: </p>\n        <ul>\n          {Object.keys(this.props.rates)\n            .sort()\n            .map((key, index) => this.removeRateIfBase(key, index))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default RequestExchangeRate;\n","import React from \"react\";\n\nclass ConvertExchangeRates extends React.Component {\n  /* Function for Dropdown */\n  displayDropDown = () => {\n    return this.props.newRatesArray.map((rates) => (\n      <option key={rates.value} value={rates.value}>\n        {rates.display}{\" \"}\n      </option>\n    ));\n  };\n\n  render() {\n    return (\n      <div>\n        <hr />\n        <p className=\"titleStyles\">Convert Exchange Rate</p>\n        <hr />\n        <p>1. Enter amount</p>\n        <p>2. Choose start/end currencies</p>\n        <p>\n          3. Click{\" \"}\n          <span style={{ color: \"red\", textDecoration: \"underline\" }}>\n           CONVERT \n          </span>{\" \"}\n          for result\n        </p>\n        <form onSubmit={this.props.handleConversion}>\n          <div>\n            <label>Amount: </label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              placeholder=\"1\"\n              step=\"0.01\"\n              value={this.props.amount}\n              onChange={this.props.handleAmountChange}\n            />\n          </div>\n          <div>\n            <label className=\"formLabel\">from: </label>\n            <select\n              name=\"start\"\n              value={this.props.startcurrency}\n              onChange={this.props.handleFromDropdown}\n            >\n              {/* Dropdown 1 */}\n              {this.displayDropDown()}\n            </select>\n          </div>\n          <div>\n            <label className=\"formLabel\">to: </label>\n            <select\n              name=\"end\"\n              value={this.props.endcurrency}\n              onChange={this.props.handleFromDropdown}\n            >\n              {/* Dropdown 2 */}\n              {this.displayDropDown()}\n            </select>\n          </div>\n          <input className=\"convertButton\" type=\"submit\" value=\"Convert\" />\n          <p className=\"convertResult\">\n            {this.props.amount} {this.props.startcurrency} is equal to{\" \"}\n            {this.props.result ? this.props.result : this.props.defValue}{\" \"}\n            {this.props.endcurrency}\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ConvertExchangeRates;\n","import React from \"react\";\n\nconst Title = props => (\n  <div className=\"title\">\n    <h1>{props.title}</h1>\n  </div>\n);\n\nTitle.defaultProps = {\n  title: \"Currency Conversion App\"\n};\n\nexport default Title;\n","import React from \"react\";\nimport \"../components/css/base.css\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleTimeString(),\n      date: new Date().toLocaleDateString(\"en-GB\")\n    };\n  }\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  tick() {\n    this.setState({\n      time: new Date().toLocaleTimeString()\n    });\n  }\n  render() {\n    return (\n      <div className=\"timeDateDependents\">\n        <p>Time: {this.state.time}</p>\n        <p>Date: {this.state.date}</p>\n        <hr />\n      </div>\n    );\n  }\n}\nexport default Clock;\n","import React from \"react\";\n\nconst Footer = props => {\n  return (\n    <div>\n      <p>\n        {\"\\u00A9\"} {props.footerText} {\"\\u00A9\"}\n      </p>\n    </div>\n  );\n};\n\nFooter.defaultProps = {\n  footerText: \" Copyright 2020 \"\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { FetchProfile } from \"./ApiCall\";\nimport RequestExchangeRate from \"./RequestExchangeRate\";\nimport ConvertExchangeRates from \"./ConvertExchangeRates\";\nimport Title from \"./Title\";\nimport Clock from \"./Clock\";\nimport Footer from \"./footer\";\n\n// CSS\nimport \"../components/css/base.css\";\n\nclass ExchangeRatesApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      value: \"GBP\",\n      result: null,\n      startcurrency: \"GBP\",\n      endcurrency: \"USD\",\n      amount: 1,\n      defValue: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFromDropdown = this.handleFromDropdown.bind(this);\n    this.handleConversion = this.handleConversion.bind(this);\n    this.handleAmountChange = this.handleAmountChange.bind(this);\n  }\n  // setting the retrieved data to state\n  componentDidMount() {\n    FetchProfile().then((data) => {\n      const defValue = data.rates.USD;\n      // console.log(defValue);\n      this.setState((prevState) => ({\n        isLoaded: true,\n        defValue: defValue.toFixed(2),\n        items: data\n      }));\n    });\n  }\n  // for submit col 1\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const base = this.state.value;\n    const basicUrl = \"https://api.exchangeratesapi.io/latest?\";\n    if (base === \"EUR\") {\n      return fetch(basicUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          this.setState(() => ({\n            items: data,\n            value: base\n          }));\n        });\n    } else {\n      return fetch(basicUrl + \"base=\" + base)\n        .then((res) => res.json())\n        .then((data) => {\n          this.setState(() => ({\n            items: data,\n            value: base\n          }));\n        });\n    }\n  };\n\n  // dropdown change col1\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value\n    });\n  };\n\n  // when adding a new amount in col 2\n  handleAmountChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      amount: event.target.value\n    });\n  };\n\n  // dropdown change handler col 2\n  handleFromDropdown = (event) => {\n    event.preventDefault();\n    if (event.target.name === \"start\") {\n      this.setState({\n        startcurrency: event.target.value\n      });\n    }\n    if (event.target.name === \"end\") {\n      this.setState({\n        endcurrency: event.target.value\n      });\n    }\n  };\n\n  // conversion change handler col 2\n  handleConversion = (event) => {\n    event.preventDefault();\n    const basicUrl = \"https://api.exchangeratesapi.io/latest?\";\n    const baseCurrencyFrom = this.state.startcurrency;\n    const convertCurrencyTo = this.state.endcurrency;\n    // const combo =\n    //   basicUrl + \"base=\" + baseCurrencyFrom + \"&symbols=\" + convertCurrencyTo;\n    // console.log(combo);\n    fetch(\n      basicUrl + \"base=\" + baseCurrencyFrom + \"&symbols=\" + convertCurrencyTo\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        const rateValue = res.rates[convertCurrencyTo];\n        // Note: using [convertCurrencyTo] as this is how to access\n        // the keys value in the key/value pair that was returned\n        const convResult = this.state.amount * rateValue;\n        this.setState((prevState) => ({\n          result: convResult.toFixed(2)\n        }));\n      });\n  };\n\n  render() {\n    const { isLoaded, items } = this.state;\n\n    if (!isLoaded || !items.rates) {\n      return <div>Loading...</div>;\n    }\n\n    let ratesKeys = Object.keys(items.rates)\n      .sort()\n      .map((rates) => {\n        return {\n          value: rates,\n          display: rates\n        };\n      });\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"headerDiv\">\n            <hr />\n            <Title title={this.props.title} />\n            <Clock />\n          </div>\n          <div className=\"sideBySide\">\n            <div className=\"col1\">\n              <RequestExchangeRate\n                items={this.state.items}\n                base={this.state.items.base}\n                rates={this.state.items.rates}\n                value={this.state.value}\n                newRatesArray={ratesKeys}\n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n              />\n            </div>\n            <div className=\"col2\">\n              <ConvertExchangeRates\n                items={this.state.items}\n                base={this.state.items.base}\n                rates={this.state.items.rates}\n                value={this.state.value}\n                newRatesArray={ratesKeys}\n                result={this.state.result}\n                startcurrency={this.state.startcurrency}\n                endcurrency={this.state.endcurrency}\n                amount={this.state.amount}\n                handleAmountChange={this.handleAmountChange}\n                handleFromDropdown={this.handleFromDropdown}\n                handleConversion={this.handleConversion}\n                convFetchRes={this.state.convFetchRes}\n                defValue={this.state.defValue}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <Footer footerText={this.props.footerText} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExchangeRatesApp;\n","export function FetchProfile() {\n  let apiUrl = \"https://api.exchangeratesapi.io/latest?base=GBP\";\n  // return promise\n  return fetch(apiUrl).then(res => res.json());\n}\n\n//API Info\n\n// Append to end of apiURL to limit returns - '& symbols=GBP, USD, CAD, JPY'\n\n// http://data.fixer.io/api/latest?access_key=ff94c304d79ade79928ce736041bfd70\n\n// Alternative - 'https://api.exchangeratesapi.io/latest?base=GBP' - rates are from European cantral bank\n// website - https://exchangeratesapi.io/\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import Header from \"./components/Header\";\nimport \"normalize.css/normalize.css\";\nimport NewMain from \"./components/NewMain\";\nimport \"./index.css\";\n// import ColDiv from \"./components/pageDivLayout/colDivs\";\n\n// const App = () => <ColDiv />;\n\n// ReactDOM.render(<Header />, document.getElementById(\"root\"));\n\nReactDOM.render(<NewMain />, document.getElementById(\"root\"));\n"],"sourceRoot":""}