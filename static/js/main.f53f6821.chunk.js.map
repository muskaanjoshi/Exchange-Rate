{"version":3,"sources":["components/RequestExchangeRate.js","components/ConvertExchangeRates.js","components/Title.js","components/Clock.js","components/footer.js","components/NewMain.js","components/ApiCall.js","index.js"],"names":["RequestExchangeRate","state","removeRateIfBase","key","index","_this","props","base","react_default","a","createElement","parseFloat","Number","rates","toFixed","addEURToDropDownIfAbsent","newRatesArray","concat","value","display","sort","map","_this2","this","className","style","color","onSubmit","handleSubmit","onChange","handleChange","type","Object","keys","React","Component","ConvertExchangeRates","displayDropDown","handleConversion","id","placeholder","step","amount","handleAmountChange","name","startcurrency","handleFromDropdown","endcurrency","result","defValue","Title","title","defaultProps","Clock","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","time","Date","toLocaleTimeString","date","toLocaleDateString","intervalID","setInterval","tick","clearInterval","intervalId","setState","Footer","footerText","ExchangeRatesApp","event","preventDefault","basicUrl","fetch","then","res","json","data","items","target","baseCurrencyFrom","convertCurrencyTo","rateValue","convResult","prevState","isLoaded","bind","assertThisInitialized","USD","_this$state","ratesKeys","components_Title","components_Clock","components_RequestExchangeRate","components_ConvertExchangeRates","convFetchRes","footer","ReactDOM","render","NewMain","document","getElementById"],"mappings":"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","file":"static/js/main.f53f6821.chunk.js","sourcesContent":["import React from \"react\";\n\nclass RequestExchangeRate extends React.Component {\n  state = {};\n\n  removeRateIfBase = (key, index) => {\n    if (key !== this.props.base) {\n      return (\n        <li key={index}>\n          {key +\n            \":\" +\n            \" \" +\n            parseFloat(Number(this.props.rates[key]).toFixed(5))}\n        </li>\n      );\n    }\n  };\n\n  addEURToDropDownIfAbsent = () => {\n    if (this.props.base === \"EUR\") {\n      let currencyAr = { value: \"EUR\", display: \"EUR\" };\n      let newRatesArrayAndEUR = this.props.newRatesArray.concat(currencyAr);\n      return newRatesArrayAndEUR.sort().map((rates) => (\n        <option key={rates.value} value={rates.value}>\n          {rates.display}\n        </option>\n      ));\n    } else {\n      return this.props.newRatesArray.map((rates) => (\n        <option key={rates.value} value={rates.value}>\n          {rates.display}\n        </option>\n      ));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        \n        <p className=\"titleStyles\">Know Exchange Rate Here !</p>\n        <hr />\n        \n          <span style={{ color: \"brown\"}}><b>\n            <p>Select the country code from given menu<br /> and press SUBMIT .</p>\n          </b></span> \n          \n        <form onSubmit={this.props.handleSubmit}>\n          <label>\n            <select value={this.props.value} onChange={this.props.handleChange}>\n              {/* populates the dropdown with the country codes */}\n              {this.addEURToDropDownIfAbsent()}\n            </select>\n          </label>\n          <input type=\"submit\" value=\"SUBMIT\" className=\"requestbutton\" />\n        </form>\n        \n        <p> 1 {this.props.value} is equal to: </p>\n        <ul>\n          {Object.keys(this.props.rates)\n            .sort()\n            .map((key, index) => this.removeRateIfBase(key, index))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default RequestExchangeRate;\n","import React from \"react\";\n\nclass ConvertExchangeRates extends React.Component {\n  /* Function -Dropdown */\n  displayDropDown = () => {\n    return this.props.newRatesArray.map((rates) => (\n      <option key={rates.value} value={rates.value}>\n        {rates.display}{\" \"}\n      </option>\n    ));\n  };\n\n  render() {\n    return (\n      <div>\n          \n        <p className=\"titleStyles\">Convert Exchange Rate</p>\n          <hr />\n        <p>1. Enter amount</p>\n        <p>2. Choose the required Country Code</p>\n        <p>3. Press CONVERT .</p>\n        <form onSubmit={this.props.handleConversion}>\n          <div>\n              <label>Amount: </label>\n              <input type=\"number\" id=\"amount\" placeholder=\"1\" step=\"0.01\" value={this.props.amount} onChange={this.props.handleAmountChange}/>\n          </div>\n          <div>\n              <label className=\"formLabel\">From: </label>\n              <select\n                name=\"start\"\n                value={this.props.startcurrency}\n                onChange={this.props.handleFromDropdown}>\n                {/* Dropdown 1 */}\n                {this.displayDropDown()}\n              </select>\n          </div>\n          <div>\n              <label className=\"formLabel\">To: </label>\n              <select name=\"end\" value={this.props.endcurrency} onChange={this.props.handleFromDropdown}>\n                {/* Dropdown 2 */}\n                {this.displayDropDown()}\n              </select>\n          </div>\n          <input className=\"convertButton\" type=\"submit\" value=\"CONVERT\" />\n          <p className=\"convertResult\">\n            {this.props.amount} {this.props.startcurrency} = {\" \"}\n            {this.props.result ? this.props.result : this.props.defValue}{\" \"}\n            {this.props.endcurrency}\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ConvertExchangeRates;\n","import React from \"react\";\n\nconst Title = props => (\n  <div className=\"title\">\n    <h1>{props.title}</h1>\n  </div>\n);\n\nTitle.defaultProps = {\n  title: \"Convertibility @ Ease\"\n};\n\nexport default Title;\n","import React from \"react\";\nimport \"../components/css/base.css\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date().toLocaleTimeString(),\n      date: new Date().toLocaleDateString(\"en-GB\")\n    };\n  }\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  tick() {\n    this.setState({\n      time: new Date().toLocaleTimeString()\n    });\n  }\n  render() {\n    return (\n      <div className=\"timeDateDependents\">\n        <p>You're on time: {this.state.time}</p>\n        <p>Today's Date: {this.state.date}</p>\n        <hr />\n      </div>\n    );\n  }\n}\nexport default Clock;\n","import React from \"react\";\n\nconst Footer = props => {\n  return (\n    <div>\n      <p>\n         {props.footerText} \n      </p>\n    </div>\n  );\n};\n\nFooter.defaultProps = {\n  footerText: \" “ Expect the best. Prepare for the worst. Capitalize on what comes. ” \"\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { FetchProfile } from \"./ApiCall\";\nimport RequestExchangeRate from \"./RequestExchangeRate\";\nimport ConvertExchangeRates from \"./ConvertExchangeRates\";\nimport Title from \"./Title\";\nimport Clock from \"./Clock\";\nimport Footer from \"./footer\";\nimport \"../components/css/base.css\";\n\nclass ExchangeRatesApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      value: \"GBP\",\n      result: null,\n      startcurrency: \"GBP\",\n      endcurrency: \"USD\",\n      amount: 1,\n      defValue: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFromDropdown = this.handleFromDropdown.bind(this);\n    this.handleConversion = this.handleConversion.bind(this);\n    this.handleAmountChange = this.handleAmountChange.bind(this);\n  }\n  // setting the retrieved data \n  componentDidMount() {\n    FetchProfile().then((data) => {\n      const defValue = data.rates.USD;\n      this.setState((prevState) => ({\n        isLoaded: true,\n        defValue: defValue.toFixed(2),\n        items: data\n      }));\n    });\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    const base = this.state.value;\n    const basicUrl = \"https://api.exchangeratesapi.io/latest?\";\n    if (base === \"EUR\") {\n      return fetch(basicUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          this.setState(() => ({\n            items: data,\n            value: base\n          }));\n        });\n    } else {\n      return fetch(basicUrl + \"base=\" + base)\n        .then((res) => res.json())\n        .then((data) => {\n          this.setState(() => ({\n            items: data,\n            value: base\n          }));\n        });\n    }\n  };\n\n  \n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value\n    });\n  };\n\n  \n  handleAmountChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      amount: event.target.value\n    });\n  };\n\n  \n  handleFromDropdown = (event) => {\n    event.preventDefault();\n    if (event.target.name === \"start\") {\n      this.setState({\n        startcurrency: event.target.value\n      });\n    }\n    if (event.target.name === \"end\") {\n      this.setState({\n        endcurrency: event.target.value\n      });\n    }\n  };\n\n  \n  handleConversion = (event) => {\n    event.preventDefault();\n    const basicUrl = \"https://api.exchangeratesapi.io/latest?\";\n    const baseCurrencyFrom = this.state.startcurrency;\n    const convertCurrencyTo = this.state.endcurrency;\n    fetch(\n      basicUrl + \"base=\" + baseCurrencyFrom + \"&symbols=\" + convertCurrencyTo\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        const rateValue = res.rates[convertCurrencyTo];\n        const convResult = this.state.amount * rateValue;\n        this.setState((prevState) => ({\n          result: convResult.toFixed(2)\n        }));\n      });\n  };\n\n  render() {\n    const { isLoaded, items } = this.state;\n\n    if (!isLoaded || !items.rates) {\n      return <div>Loading...</div>;\n    }\n\n    let ratesKeys = Object.keys(items.rates)\n      .sort()\n      .map((rates) => {\n        return {\n          value: rates,\n          display: rates\n        };\n      });\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"headerDiv\">\n            \n            <Title title={this.props.title} />\n            <Clock />\n          </div>\n          <div className=\"sideBySide\">\n          \n            <div className=\"col1\">\n              <RequestExchangeRate\n                items={this.state.items}\n                base={this.state.items.base}\n                rates={this.state.items.rates}\n                value={this.state.value}\n                newRatesArray={ratesKeys}\n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n              />\n            </div>\n            <div className=\"col2\">\n              <ConvertExchangeRates\n                items={this.state.items}\n                base={this.state.items.base}\n                rates={this.state.items.rates}\n                value={this.state.value}\n                newRatesArray={ratesKeys}\n                result={this.state.result}\n                startcurrency={this.state.startcurrency}\n                endcurrency={this.state.endcurrency}\n                amount={this.state.amount}\n                handleAmountChange={this.handleAmountChange}\n                handleFromDropdown={this.handleFromDropdown}\n                handleConversion={this.handleConversion}\n                convFetchRes={this.state.convFetchRes}\n                defValue={this.state.defValue}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <Footer footerText={this.props.footerText} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExchangeRatesApp;\n","export function FetchProfile() {\n  let apiUrl = \"https://api.exchangeratesapi.io/latest?base=GBP\";\n  return fetch(apiUrl).then(res => res.json());\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\nimport NewMain from \"./components/NewMain\";\nimport \"./index.css\";\nReactDOM.render(<NewMain />, document.getElementById(\"root\"));\n"],"sourceRoot":""}